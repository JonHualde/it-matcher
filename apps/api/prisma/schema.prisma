generator client {
    provider      = "prisma-client-js"
    binaryTargets = ["native", "rhel-openssl-1.0.x"]
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
    // shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model user {
    id                  Int           @id @default(autoincrement())
    created_at          DateTime      @default(now())
    updated_at          DateTime      @updatedAt
    email               String        @unique
    password            String
    first_name          String
    last_name           String
    permission          Int
    linkedIn_url        String?
    instagram_username  String?
    github_url          String?
    website_url         String?
    notion_page_url     String?
    profile_picture_ref String
    projects            project[]
    favourites          favourite[]
    applications        application[]
}

model project {
    id                             Int           @id @default(autoincrement())
    user_id                        Int
    created_at                     DateTime      @default(now())
    updated_at                     DateTime      @updatedAt
    is_online                      Boolean
    project_name                   String        @unique
    starting_on                    DateTime
    full_name                      String
    estimated_time_duration        Int
    estimated_time_duration_metric String
    description                    String
    difficulty                     String
    type                           String
    number_of_participants         Int
    initial_investment             Boolean
    initial_investment_cost        Int?
    tools_and_technologies         Int[]
    participants_ids               Int[]
    job_titles_wanted              Int[]
    job_titles_filled              Int[]
    project_main_picture           String
    attachments                    String[]
    applications                   application[]
    user                           user          @relation(fields: [user_id], references: [id])
    favourites                     favourite[]
}

model application {
    id           Int      @id @default(autoincrement())
    created_at   DateTime @default(now())
    updated_at   DateTime @updatedAt
    status       String
    project_id   Int
    user_id      Int
    job_title_id Int
    project      project  @relation(fields: [project_id], references: [id])
    user         user     @relation(fields: [user_id], references: [id])
}

model favourite {
    id         Int      @id @default(autoincrement())
    created_at DateTime @default(now())
    updated_at DateTime @updatedAt
    project_id Int
    user_id    Int
    user       user     @relation(fields: [user_id], references: [id])
    project    project  @relation(fields: [project_id], references: [id])
}

model tools_and_technologie {
    id         Int      @id @default(autoincrement())
    created_at DateTime @default(now())
    updated_at DateTime @updatedAt
    name       String
}

model job_title {
    id         Int      @id @default(autoincrement())
    created_at DateTime @default(now())
    updated_at DateTime @updatedAt
    name       String
}
