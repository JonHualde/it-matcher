generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider          = "postgresql"
    url               = env("DATABASE_URL")
    shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Users {
    id                  Int            @id @default(autoincrement())
    createdAt           DateTime       @default(now())
    updatedAt           DateTime       @updatedAt
    email               String         @unique
    password            String
    first_name          String
    last_name           String
    permission          Int
    linkedIn_url        String?
    instagram_username  String?
    github_url          String?
    website_url         String?
    notion_page_url     String?
    profile_picture_ref String
    projects            Projects[]
    favourites          Favourites[]
    Application         Applications[]
}

model Projects {
    id                          Int            @id @default(autoincrement())
    createdAt                   DateTime       @default(now())
    updatedAt                   DateTime       @updatedAt
    userId                      Int
    isOnline                    Boolean
    projectName                 String         @unique
    startingOn                  DateTime
    estimatedTimeDuration       Int
    estimatedTimeDurationMetric String
    description                 String
    difficulty                  String
    type                        String
    searchingFor                String[]
    numberOfParticipant         Int
    initialInvestment           Boolean
    initialInvestmentCost       Int?
    toolsAndTechnologies        String[]
    projectPicture              String
    attachments                 String[]
    applications                Applications[]
    User                        Users?         @relation(fields: [userId], references: [id])
}

model Applications {
    id          Int       @id @default(autoincrement())
    createdAt   DateTime  @default(now())
    updatedAt   DateTime  @updatedAt
    status      String
    Project     Projects? @relation(fields: [projectId], references: [id])
    projectId   Int?
    Applicant   Users?    @relation(fields: [applicantId], references: [id])
    applicantId Int?
}

model Favourites {
    id         Int      @id @default(autoincrement())
    createdAt  DateTime @default(now())
    updatedAt  DateTime @updatedAt
    projectIds Int[]
    user       Users    @relation(fields: [userId], references: [id])
    userId     Int
}
