generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
    // shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model user {
    id                  Int           @id @default(autoincrement())
    createdAt           DateTime      @default(now())
    updatedAt           DateTime      @updatedAt
    email               String        @unique
    password            String
    first_name          String
    last_name           String
    permission          Int
    linkedIn_url        String?
    instagram_username  String?
    github_url          String?
    website_url         String?
    notion_page_url     String?
    profile_picture_ref String
    projects            project[]
    favourites          favourite[]
    applications        application[]
}

model project {
    id                          Int           @id @default(autoincrement())
    createdAt                   DateTime      @default(now())
    updatedAt                   DateTime      @updatedAt
    isOnline                    Boolean
    projectName                 String        @unique
    startingOn                  DateTime
    full_name                   String
    estimatedTimeDuration       Int
    estimatedTimeDurationMetric String
    description                 String
    difficulty                  String
    type                        String
    numberOfParticipant         Int
    initialInvestment           Boolean
    initialInvestmentCost       Int?
    toolsAndTechnologies        Int[]
    jobTitle                    Int[]
    projectPicture              String
    attachments                 String[]
    applications                application[]
    user                        user          @relation(fields: [userId], references: [id])
    userId                      Int
    favourites                  favourite[]
}

model application {
    id        Int      @id @default(autoincrement())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    status    String
    project   project  @relation(fields: [projectId], references: [id])
    projectId Int
    user      user     @relation(fields: [userId], references: [id])
    userId    Int
}

model favourite {
    id        Int      @id @default(autoincrement())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    project   project  @relation(fields: [projectId], references: [id])
    projectId Int
    user      user     @relation(fields: [userId], references: [id])
    userId    Int
}

model tools_and_technologie {
    id        Int      @id @default(autoincrement())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    name      String
}

model job_title {
    id        Int      @id @default(autoincrement())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    name      String
}
